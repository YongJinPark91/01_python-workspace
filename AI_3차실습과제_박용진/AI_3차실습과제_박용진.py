#(1) 이 데이터 분포를 나타내는 훈련 집합을 쓰시오. [3-1아래 답안 작성]

#x1=(0,0,0), y1=-1
#x2=(0,0,1), y2=1
#[x3와 y3 를 작성하시오]
#[x4와 y4 를 작성하시오]
#x5=(1,0,0), y5=-1
#x6=(1,0,1), y6=-1
#[x7와 y7 를 작성하시오]
#[x8와 y8 를 작성하시오]

x1 = [0, 0, 0], y1 = -1
x2 = [0, 0, 1], y2 = 1
x3 = [0, 1, 0], y3 = -1
x4 = [0, 1, 1], y4 = -1
x5 = [1, 0, 0], y5 = -1
x6 = [1, 0, 1], y6 = -1
x7 = [1, 1, 0], y7 = 1
x8 = [1, 1, 1], y8 = -1

#============================================================================================================================================#

#(2) 퍼셉트론은 이 데이터를 100% 정확률로 인식할 수 없는 이유를 설명하시오. [3-2.답안 작성]
#인식할 수 없는 이유는 데이터가 선형적으로 분리되지 않기 때문에, 단일 퍼셉트로으로 만으로는 모든 데이터를 완벽하게 분류 불가

#============================================================================================================================================#

#(3) 이 데이터를 인식하는 다층 퍼셉트론을 제시하시오.

#============================================================================================================================================#

#(4) 이 데이터를 학습하고 인식하는 프로그램을 작성하고 실행 결과를 제시하시오.
from sklearn.neural_network import MLPClassifier

# 훈련 집합 구축
X = [[0, 0, 0], [0, 0, 1], [0, 1, 0], [0, 1, 1], [1, 0, 0], [1, 0, 1], [1, 1, 0], [1, 1, 1]]
y = [-1, 1, -1, -1, -1, -1, 1, -1]

# MLPClassifier를 사용하여 다층 퍼셉트론 학습
mlp = MLPClassifier(hidden_layer_sizes=(2,), activation='tanh', random_state=1, max_iter=1000)
mlp.fit(X, y)

# 학습된 퍼셉트론의 매개변수 출력
print("학습된 퍼셉트론의 매개변수(가중치):\n", mlp.coefs_, "\n", mlp.intercepts_)
print("훈련집합에 대한 예측: ", mlp.predict(X))
print("정확률 측정: ", mlp.score(X, y) * 100, "%")
